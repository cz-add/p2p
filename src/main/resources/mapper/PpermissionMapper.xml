<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.p2p.mapper.PpermissionMapper" >
  <resultMap id="BaseResultMap" type="com.zking.p2p.model.Ppermission" >
    <constructor >
      <idArg column="pid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="permission" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ppid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="available" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    pid, pname, permission, level, ppid, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from p_permission
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from p_permission
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.p2p.model.Ppermission" >
    insert into p_permission (pid, pname, permission, 
      level, ppid, available
      )
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{ppid,jdbcType=INTEGER}, #{available,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.p2p.model.Ppermission" >
    insert into p_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="ppid != null" >
        ppid,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="ppid != null" >
        #{ppid,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.p2p.model.Ppermission" >
    update p_permission
    <set >
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="ppid != null" >
        ppid = #{ppid,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.p2p.model.Ppermission" >
    update p_permission
    set pname = #{pname,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      ppid = #{ppid,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>