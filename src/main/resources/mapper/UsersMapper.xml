<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zking.p2p.mapper.UsersMapper">
  <cache type="com.zking.p2p.redis.RedisCache"></cache>
  <resultMap id="BaseResultMap" type="com.zking.p2p.model.Users">
      <id column="uid" property="uid" javaType="java.lang.Integer" />
      <result column="uname" property="uname" javaType="java.lang.String"  />
      <result column="realname" property="realname" javaType="java.lang.String"  />
      <result column="email" property="email" javaType="java.lang.String"  />
      <result column="address" property="address" javaType="java.lang.String"  />
      <result column="tel" property="tel" javaType="java.lang.String"  />
      <result column="time" property="time" javaType="java.sql.Date" />
      <result column="password" property="password" javaType="java.lang.String"  />
      <result column="sfz" property="sfz" javaType="java.lang.String" />
      <result column="tx" property="tx" javaType="java.lang.String" />
      <result column="salt" property="salt" javaType="java.lang.String"  />
      <result column="locked" property="locked" javaType="java.lang.Integer" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, uname, realname, email, address, tel, time, password, sfz, tx, salt, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zking.p2p.model.Users" useGeneratedKeys="true" keyProperty="uid">
    insert into users (
    uname, realname,
      email, address, tel, 
       password, sfz,
      tx, salt)
    values ( #{uname,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
       #{password,jdbcType=VARCHAR}, #{sfz,jdbcType=VARCHAR},
      #{tx,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.p2p.model.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sfz != null">
        sfz,
      </if>
      <if test="tx != null">
        tx,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sfz != null">
        #{sfz,jdbcType=VARCHAR},
      </if>
      <if test="tx != null">
        #{tx,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.p2p.model.Users">
    update users
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sfz != null">
        sfz = #{sfz,jdbcType=VARCHAR},
      </if>
      <if test="tx != null">
        tx = #{tx,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.p2p.model.Users">
    update users
    set uname = #{uname,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      password = #{password,jdbcType=VARCHAR},
      sfz = #{sfz,jdbcType=VARCHAR},
      tx = #{tx,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
    <update id="upjy" parameterType="users">
      update users
    set
      locked = #{locked,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
    </update>


    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap" useCache="false">
        select *
        from users
        where uname = #{uname,jdbcType=VARCHAR}
    </select>
  <select id="listPermissionsByUserName" parameterType="com.zking.p2p.model.Users" resultType="string">
    select distinct p.permission
    from users u inner join p_user_role ur on u.uid = ur.uid inner join p_role r on ur.rid = r.rid
      inner join p_permission_role rp on r.rid = rp.rid inner join p_permission p on rp.pid = p.pid
    where r.available = 1 and p.available = 1 and u.uname = #{uname,jdbcType=VARCHAR}
    </select>
  <select id="listRolesByUserName" parameterType="com.zking.p2p.model.Users" resultType="string">
    select distinct r.role_name
    from users u inner join p_user_role ur on u.uid = ur.uid inner join p_role r on ur.rid = r.rid
    where r.available = 1 and u.uname = #{uname,jdbcType=VARCHAR}
    </select>
  <select id="list" resultMap="BaseResultMap" parameterType="users" useCache="false">
    select * from users where 1=1   <if test="uname != null and uname!=''" >
    and (uname like concat('%',#{uname},'%')  )
  </if>
  </select>
</mapper>